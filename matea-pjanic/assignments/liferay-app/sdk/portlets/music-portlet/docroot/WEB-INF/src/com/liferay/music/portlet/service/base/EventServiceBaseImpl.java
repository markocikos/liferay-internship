/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.music.portlet.service.base;

import com.liferay.music.portlet.model.Event;
import com.liferay.music.portlet.service.EventService;
import com.liferay.music.portlet.service.persistence.AlbumPersistence;
import com.liferay.music.portlet.service.persistence.BendPersistence;
import com.liferay.music.portlet.service.persistence.EventPersistence;
import com.liferay.music.portlet.service.persistence.SongPersistence;

import com.liferay.portal.kernel.bean.BeanReference;
import com.liferay.portal.kernel.bean.IdentifiableBean;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdate;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdateFactoryUtil;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.service.BaseServiceImpl;
import com.liferay.portal.service.persistence.UserPersistence;

import javax.sql.DataSource;

/**
 * Provides the base implementation for the event remote service.
 *
 * <p>
 * This implementation exists only as a container for the default service methods generated by ServiceBuilder. All custom service methods should be put in {@link com.liferay.music.portlet.service.impl.EventServiceImpl}.
 * </p>
 *
 * @author Matea Pjanic
 * @see com.liferay.music.portlet.service.impl.EventServiceImpl
 * @see com.liferay.music.portlet.service.EventServiceUtil
 * @generated
 */
public abstract class EventServiceBaseImpl extends BaseServiceImpl
	implements EventService, IdentifiableBean {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. Always use {@link com.liferay.music.portlet.service.EventServiceUtil} to access the event remote service.
	 */

	/**
	 * Returns the album local service.
	 *
	 * @return the album local service
	 */
	public com.liferay.music.portlet.service.AlbumLocalService getAlbumLocalService() {
		return albumLocalService;
	}

	/**
	 * Sets the album local service.
	 *
	 * @param albumLocalService the album local service
	 */
	public void setAlbumLocalService(
		com.liferay.music.portlet.service.AlbumLocalService albumLocalService) {
		this.albumLocalService = albumLocalService;
	}

	/**
	 * Returns the album remote service.
	 *
	 * @return the album remote service
	 */
	public com.liferay.music.portlet.service.AlbumService getAlbumService() {
		return albumService;
	}

	/**
	 * Sets the album remote service.
	 *
	 * @param albumService the album remote service
	 */
	public void setAlbumService(
		com.liferay.music.portlet.service.AlbumService albumService) {
		this.albumService = albumService;
	}

	/**
	 * Returns the album persistence.
	 *
	 * @return the album persistence
	 */
	public AlbumPersistence getAlbumPersistence() {
		return albumPersistence;
	}

	/**
	 * Sets the album persistence.
	 *
	 * @param albumPersistence the album persistence
	 */
	public void setAlbumPersistence(AlbumPersistence albumPersistence) {
		this.albumPersistence = albumPersistence;
	}

	/**
	 * Returns the bend local service.
	 *
	 * @return the bend local service
	 */
	public com.liferay.music.portlet.service.BendLocalService getBendLocalService() {
		return bendLocalService;
	}

	/**
	 * Sets the bend local service.
	 *
	 * @param bendLocalService the bend local service
	 */
	public void setBendLocalService(
		com.liferay.music.portlet.service.BendLocalService bendLocalService) {
		this.bendLocalService = bendLocalService;
	}

	/**
	 * Returns the bend remote service.
	 *
	 * @return the bend remote service
	 */
	public com.liferay.music.portlet.service.BendService getBendService() {
		return bendService;
	}

	/**
	 * Sets the bend remote service.
	 *
	 * @param bendService the bend remote service
	 */
	public void setBendService(
		com.liferay.music.portlet.service.BendService bendService) {
		this.bendService = bendService;
	}

	/**
	 * Returns the bend persistence.
	 *
	 * @return the bend persistence
	 */
	public BendPersistence getBendPersistence() {
		return bendPersistence;
	}

	/**
	 * Sets the bend persistence.
	 *
	 * @param bendPersistence the bend persistence
	 */
	public void setBendPersistence(BendPersistence bendPersistence) {
		this.bendPersistence = bendPersistence;
	}

	/**
	 * Returns the event local service.
	 *
	 * @return the event local service
	 */
	public com.liferay.music.portlet.service.EventLocalService getEventLocalService() {
		return eventLocalService;
	}

	/**
	 * Sets the event local service.
	 *
	 * @param eventLocalService the event local service
	 */
	public void setEventLocalService(
		com.liferay.music.portlet.service.EventLocalService eventLocalService) {
		this.eventLocalService = eventLocalService;
	}

	/**
	 * Returns the event remote service.
	 *
	 * @return the event remote service
	 */
	public com.liferay.music.portlet.service.EventService getEventService() {
		return eventService;
	}

	/**
	 * Sets the event remote service.
	 *
	 * @param eventService the event remote service
	 */
	public void setEventService(
		com.liferay.music.portlet.service.EventService eventService) {
		this.eventService = eventService;
	}

	/**
	 * Returns the event persistence.
	 *
	 * @return the event persistence
	 */
	public EventPersistence getEventPersistence() {
		return eventPersistence;
	}

	/**
	 * Sets the event persistence.
	 *
	 * @param eventPersistence the event persistence
	 */
	public void setEventPersistence(EventPersistence eventPersistence) {
		this.eventPersistence = eventPersistence;
	}

	/**
	 * Returns the song local service.
	 *
	 * @return the song local service
	 */
	public com.liferay.music.portlet.service.SongLocalService getSongLocalService() {
		return songLocalService;
	}

	/**
	 * Sets the song local service.
	 *
	 * @param songLocalService the song local service
	 */
	public void setSongLocalService(
		com.liferay.music.portlet.service.SongLocalService songLocalService) {
		this.songLocalService = songLocalService;
	}

	/**
	 * Returns the song remote service.
	 *
	 * @return the song remote service
	 */
	public com.liferay.music.portlet.service.SongService getSongService() {
		return songService;
	}

	/**
	 * Sets the song remote service.
	 *
	 * @param songService the song remote service
	 */
	public void setSongService(
		com.liferay.music.portlet.service.SongService songService) {
		this.songService = songService;
	}

	/**
	 * Returns the song persistence.
	 *
	 * @return the song persistence
	 */
	public SongPersistence getSongPersistence() {
		return songPersistence;
	}

	/**
	 * Sets the song persistence.
	 *
	 * @param songPersistence the song persistence
	 */
	public void setSongPersistence(SongPersistence songPersistence) {
		this.songPersistence = songPersistence;
	}

	/**
	 * Returns the counter local service.
	 *
	 * @return the counter local service
	 */
	public com.liferay.counter.service.CounterLocalService getCounterLocalService() {
		return counterLocalService;
	}

	/**
	 * Sets the counter local service.
	 *
	 * @param counterLocalService the counter local service
	 */
	public void setCounterLocalService(
		com.liferay.counter.service.CounterLocalService counterLocalService) {
		this.counterLocalService = counterLocalService;
	}

	/**
	 * Returns the resource local service.
	 *
	 * @return the resource local service
	 */
	public com.liferay.portal.service.ResourceLocalService getResourceLocalService() {
		return resourceLocalService;
	}

	/**
	 * Sets the resource local service.
	 *
	 * @param resourceLocalService the resource local service
	 */
	public void setResourceLocalService(
		com.liferay.portal.service.ResourceLocalService resourceLocalService) {
		this.resourceLocalService = resourceLocalService;
	}

	/**
	 * Returns the user local service.
	 *
	 * @return the user local service
	 */
	public com.liferay.portal.service.UserLocalService getUserLocalService() {
		return userLocalService;
	}

	/**
	 * Sets the user local service.
	 *
	 * @param userLocalService the user local service
	 */
	public void setUserLocalService(
		com.liferay.portal.service.UserLocalService userLocalService) {
		this.userLocalService = userLocalService;
	}

	/**
	 * Returns the user remote service.
	 *
	 * @return the user remote service
	 */
	public com.liferay.portal.service.UserService getUserService() {
		return userService;
	}

	/**
	 * Sets the user remote service.
	 *
	 * @param userService the user remote service
	 */
	public void setUserService(
		com.liferay.portal.service.UserService userService) {
		this.userService = userService;
	}

	/**
	 * Returns the user persistence.
	 *
	 * @return the user persistence
	 */
	public UserPersistence getUserPersistence() {
		return userPersistence;
	}

	/**
	 * Sets the user persistence.
	 *
	 * @param userPersistence the user persistence
	 */
	public void setUserPersistence(UserPersistence userPersistence) {
		this.userPersistence = userPersistence;
	}

	public void afterPropertiesSet() {
		Class<?> clazz = getClass();

		_classLoader = clazz.getClassLoader();
	}

	public void destroy() {
	}

	/**
	 * Returns the Spring bean ID for this bean.
	 *
	 * @return the Spring bean ID for this bean
	 */
	@Override
	public String getBeanIdentifier() {
		return _beanIdentifier;
	}

	/**
	 * Sets the Spring bean ID for this bean.
	 *
	 * @param beanIdentifier the Spring bean ID for this bean
	 */
	@Override
	public void setBeanIdentifier(String beanIdentifier) {
		_beanIdentifier = beanIdentifier;
	}

	@Override
	public Object invokeMethod(String name, String[] parameterTypes,
		Object[] arguments) throws Throwable {
		Thread currentThread = Thread.currentThread();

		ClassLoader contextClassLoader = currentThread.getContextClassLoader();

		if (contextClassLoader != _classLoader) {
			currentThread.setContextClassLoader(_classLoader);
		}

		try {
			return _clpInvoker.invokeMethod(name, parameterTypes, arguments);
		}
		finally {
			if (contextClassLoader != _classLoader) {
				currentThread.setContextClassLoader(contextClassLoader);
			}
		}
	}

	protected Class<?> getModelClass() {
		return Event.class;
	}

	protected String getModelClassName() {
		return Event.class.getName();
	}

	/**
	 * Performs an SQL query.
	 *
	 * @param sql the sql query
	 */
	protected void runSQL(String sql) throws SystemException {
		try {
			DataSource dataSource = eventPersistence.getDataSource();

			SqlUpdate sqlUpdate = SqlUpdateFactoryUtil.getSqlUpdate(dataSource,
					sql, new int[0]);

			sqlUpdate.update();
		}
		catch (Exception e) {
			throw new SystemException(e);
		}
	}

	@BeanReference(type = com.liferay.music.portlet.service.AlbumLocalService.class)
	protected com.liferay.music.portlet.service.AlbumLocalService albumLocalService;
	@BeanReference(type = com.liferay.music.portlet.service.AlbumService.class)
	protected com.liferay.music.portlet.service.AlbumService albumService;
	@BeanReference(type = AlbumPersistence.class)
	protected AlbumPersistence albumPersistence;
	@BeanReference(type = com.liferay.music.portlet.service.BendLocalService.class)
	protected com.liferay.music.portlet.service.BendLocalService bendLocalService;
	@BeanReference(type = com.liferay.music.portlet.service.BendService.class)
	protected com.liferay.music.portlet.service.BendService bendService;
	@BeanReference(type = BendPersistence.class)
	protected BendPersistence bendPersistence;
	@BeanReference(type = com.liferay.music.portlet.service.EventLocalService.class)
	protected com.liferay.music.portlet.service.EventLocalService eventLocalService;
	@BeanReference(type = com.liferay.music.portlet.service.EventService.class)
	protected com.liferay.music.portlet.service.EventService eventService;
	@BeanReference(type = EventPersistence.class)
	protected EventPersistence eventPersistence;
	@BeanReference(type = com.liferay.music.portlet.service.SongLocalService.class)
	protected com.liferay.music.portlet.service.SongLocalService songLocalService;
	@BeanReference(type = com.liferay.music.portlet.service.SongService.class)
	protected com.liferay.music.portlet.service.SongService songService;
	@BeanReference(type = SongPersistence.class)
	protected SongPersistence songPersistence;
	@BeanReference(type = com.liferay.counter.service.CounterLocalService.class)
	protected com.liferay.counter.service.CounterLocalService counterLocalService;
	@BeanReference(type = com.liferay.portal.service.ResourceLocalService.class)
	protected com.liferay.portal.service.ResourceLocalService resourceLocalService;
	@BeanReference(type = com.liferay.portal.service.UserLocalService.class)
	protected com.liferay.portal.service.UserLocalService userLocalService;
	@BeanReference(type = com.liferay.portal.service.UserService.class)
	protected com.liferay.portal.service.UserService userService;
	@BeanReference(type = UserPersistence.class)
	protected UserPersistence userPersistence;
	private String _beanIdentifier;
	private ClassLoader _classLoader;
	private EventServiceClpInvoker _clpInvoker = new EventServiceClpInvoker();
}